import "./chunk-MJORAH5I.js";
import {
  mount
} from "./chunk-V3R6K43O.js";
import "./chunk-MTBDFKQL.js";
import "./chunk-QKOF6TZO.js";
import "./chunk-F3TNGEWF.js";
import "./chunk-6WDZWUHI.js";

// node_modules/@astrojs/svelte/client-v5.js
var client_v5_default = (element) => {
  return async (Component, props, slotted) => {
    if (!element.hasAttribute("ssr"))
      return;
    let children = void 0;
    let $$slots = void 0;
    for (const [key, value] of Object.entries(slotted)) {
      if (key === "default") {
        children = createSlotDefinition(key, value);
      } else {
        $$slots ?? ($$slots = {});
        $$slots[key] = createSlotDefinition(key, value);
      }
    }
    const [, destroy] = mount(Component, {
      target: element,
      props: {
        ...props,
        children,
        $$slots
      }
    });
    element.addEventListener("astro:unmount", () => destroy(), { once: true });
  };
};
function createSlotDefinition(key, children) {
  return ($$anchor, _$$slotProps) => {
    const parent = $$anchor.parentNode;
    const el = document.createElement("div");
    el.innerHTML = `<astro-slot${key === "default" ? "" : ` name="${key}"`}>${children}</astro-slot>`;
    parent.insertBefore(el.children[0], $$anchor);
  };
}
export {
  client_v5_default as default
};
//# sourceMappingURL=@astrojs_svelte_client-v5__js.js.map
